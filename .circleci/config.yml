version: 2.1

commands:
  restart_runners:
    description: "restart runners for env"
    parameters:
      env-name:
        type: string
        description: 'eg test-dev, live-production'
      kube-token:
        type: env_var_name
        description: 'kube token from circleci env vars'
    steps:
      - kube-orb/install-kubectl
      - run:
          name: kubectl fetch cert
          command: echo -n "$KUBE_CERTIFICATE_AUTHORITY" | base64 -d > .kube_certificate_authority
      - run:
          name: kubectl config cluster
          command: kubectl config set-cluster "$KUBE_CLUSTER" --certificate-authority=".kube_certificate_authority" --server="$KUBE_SERVER"
      - run:
          name: kubectl config credentials
          command: kubectl config set-credentials "circleci_<< parameters.env-name >>" --token="${<< parameters.kube-token >>}"
      - run:
          name: kubectl set context
          command: kubectl config set-context "circleci_<< parameters.env-name >>" --cluster="$KUBE_CLUSTER" --user="circleci_<< parameters.env-name >>" --namespace="formbuilder-services-<< parameters.env-name >>"
      - run:
          name: kubectl use context
          command: kubectl config use-context "circleci_<< parameters.env-name >>"
      - run:
          name: restart << parameters.env-name >> runners
          command: kubectl rollout restart deployments -n formbuilder-services-<< parameters.env-name >>
      - run:
          name: restart << parameters.env-name >> runner
          command: kubectl get deploy --output name -n formbuilder-services-<< parameters.env-name >> | xargs -n1 -t kubectl rollout status -n formbuilder-services-<< parameters.env-name >>

jobs:
  test:
    docker:
      - image: circleci/node:12.4.0
    steps:
      - checkout
      - run:
          name: Install
          command: npm install
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Test
          command: npm run test
  build_to_test:
    docker: &ecr_image
      - image: $AWS_ECR_ACCOUNT_URL
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: npm install
          command: npm install
      - run:
          name: Build test image
          command: scripts/circleci_build.sh test
  restart_test:
    docker:
      - image: circleci/ruby:latest
    steps:
      - restart_runners:
          env-name: test-dev
          kube-token: KUBE_TOKEN_TEST_DEV
      - restart_runners:
          env-name: test-production
          kube-token: KUBE_TOKEN_TEST_PRODUCTION
  build_to_live:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: npm install
          command: npm install
      - run:
          name: Build live image
          command: scripts/circleci_build.sh live
  restart_live:
    docker:
      - image: circleci/ruby:latest
    steps:
      - restart_runners:
          env-name: live-dev
          kube-token: KUBE_TOKEN_LIVE_DEV
      - restart_runners:
          env-name: live-production
          kube-token: KUBE_TOKEN_LIVE_PRODUCTION

  trigger_acceptance_tests:
    working_directory: ~/circle/git/fb-runner-node
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker
      - add_ssh_keys:
          fingerprints:
            - "e3:25:34:15:2b:c4:d3:b7:c3:94:9f:50:dd:c3:0f:de"
      - run:
          name: cloning deploy scripts
          command: 'git clone git@github.com:ministryofjustice/fb-deploy.git deploy-scripts'
      - run:
          name: "Trigger Acceptance Tests"
          command: './deploy-scripts/bin/acceptance_tests'

  publish:
    docker:
      - image: circleci/node:12.4.0
    steps:
      - checkout
      - run:
          name: Install
          command: npm install
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: Publish package
          command: |
            set -e

            VERSION=$(node -p "require('./package.json').version")
            PUBLISHED_VERSION=$(npm view @ministryofjustice/fb-runner-node version);

            if [ "$VERSION" != "$PUBLISHED_VERSION" ]
            then
              npm publish
            fi

orbs:
  kube-orb: circleci/kubernetes@0.10.0

workflows:
  version: 2
  test_and_build:
    jobs:
      - test
      - publish:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - master
      - build_to_test:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - add-acceptance-test-ci-mode
      - restart_test:
          requires:
            - build_to_test
      - trigger_acceptance_tests:
          requires:
            - restart_test
          filters:
            branches:
              only:
                - master
                - add-acceptance-test-ci-mode
      - confirm_live_build:
          type: approval
          requires:
            - build_to_test
      - build_to_live:
          requires:
            - confirm_live_build
      - restart_live:
          requires:
            - build_to_live
